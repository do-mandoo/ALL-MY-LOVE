generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  password   String
  email      String     @unique
  bio        String?
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  tweets     Tweet[] // 사용자가 작성한 트윗들
  likes      Like[] // 사용자가 누른 좋아요들
  responses  Response[] // 사용자가 단 답글들
}

model Tweet {
  id         Int        @id @default(autoincrement())
  tweet      String
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  like       Like[]
  responses  Response[] // 이 트윗에 달린 답글들
}

model Like {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  tweet      Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId    Int

  @@unique([userId, tweetId]) // 중복방지
  @@index([userId]) // 빠른 검색
  @@index([tweetId]) // 빠른 검색
}

model Response {
  id         Int      @id @default(autoincrement())
  comment    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // 답글을 단 유저
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  // 답글의 대상 트윗
  tweet   Tweet @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId Int

  @@index([userId])
  @@index([tweetId])
}
